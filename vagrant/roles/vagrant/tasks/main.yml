---

- name: resolução de nomes entre VMs (Debian)
  include_tasks: Debian-family.yml
  when:
    - ansible_facts['distribution_file_variety'] == "Debian"
    - ansible_facts['distribution_major_version']|int >= 8

- name: resolução de nomes entre VMs (RedHat)
  include_tasks: RedHat-family.yml
  when:
    - ansible_facts['distribution_file_variety'] == "RedHat"
    - ansible_facts['distribution_major_version']|int >= 6

- name: cria chaves do root
  become: true
  user:
    name: root
    generate_ssh_key: yes

- name: permite login por senha
  become: true
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^#?PasswordAuthentication'
    line: 'PasswordAuthentication yes'

- name: cria chave ssh do usuário local, caso não exista
  local_action:
    module: user
    name: "{{ lookup('env','LOGNAME') }}"
    generate_ssh_key: yes
  run_once: True
  register: "usuario_local"

- name: permite acesso por ssh externo
  become: true
  authorized_key:
    user: root
    state: present
    key: "{{ usuario_local.ssh_public_key }}"

- name: limpa registros do IP no known_hosts local
  local_action:
    module: known_hosts
    name: "{{ ansible_host }}"
    state: absent

- name: adiciona host no .ssh/config local
  local_action:
    module: blockinfile
    path: '~/.ssh/config'
    marker: "# {mark} ANSIBLE MANAGED BLOCK - {{ ansible_hostname }} -->"
    block: |
      Host {{ ansible_hostname }} {{ ansible_hostname }}.local
      Hostname {{ ip|default(ansible_host) }}
      User root
      StrictHostKeyChecking accept-new
